'use strict'

exports.__esModule = true
exports.default = extractFiles
exports.ReactNativeFile = exports.isObject = void 0

require('core-js/modules/es6.function.name')

var isObject = function isObject(node) {
  return typeof node === 'object' && node !== null
}

exports.isObject = isObject

function extractFiles(tree, treePath) {
  if (treePath === void 0) {
    treePath = ''
  }

  var files = []

  var recurse = function recurse(node, nodePath) {
    Object.keys(node).forEach(function(key) {
      if (!isObject(node[key])) return
      var path = '' + nodePath + key

      if (
        (typeof File !== 'undefined' && node[key] instanceof File) ||
        (typeof Blob !== 'undefined' && node[key] instanceof Blob) ||
        node[key] instanceof ReactNativeFile
      ) {
        files.push({
          path: path,
          file: node[key]
        })
        node[key] = null
        return
      }

      if (typeof FileList !== 'undefined' && node[key] instanceof FileList)
        node[key] = Array.prototype.slice.call(node[key])
      recurse(node[key], path + '.')
    })
  }

  if (isObject(tree)) recurse(tree, treePath === '' ? treePath : treePath + '.')
  return files
}

var ReactNativeFile = function ReactNativeFile(_ref) {
  var uri = _ref.uri,
    type = _ref.type,
    name = _ref.name
  this.uri = uri
  this.type = type
  this.name = name
}

exports.ReactNativeFile = ReactNativeFile

ReactNativeFile.list = function(files) {
  return files.map(function(file) {
    return new ReactNativeFile(file)
  })
}
