import { isObject } from './isObject'
import { ReactNativeFile } from './ReactNativeFile'
export function extractFiles(tree, treePath) {
  if (treePath === void 0) {
    treePath = ''
  }

  var files = []

  var recurse = function recurse(node, nodePath) {
    Object.keys(node).forEach(function(key) {
      if (!isObject(node[key])) return
      var path = '' + nodePath + key

      if (
        (typeof File !== 'undefined' && node[key] instanceof File) ||
        (typeof Blob !== 'undefined' && node[key] instanceof Blob) ||
        node[key] instanceof ReactNativeFile
      ) {
        files.push({
          path: path,
          file: node[key]
        })
        node[key] = null
        return
      }

      if (typeof FileList !== 'undefined' && node[key] instanceof FileList)
        node[key] = Array.prototype.slice.call(node[key])
      recurse(node[key], path + '.')
    })
  }

  if (isObject(tree)) recurse(tree, treePath === '' ? treePath : treePath + '.')
  return files
}
