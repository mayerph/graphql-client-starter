{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://apollo-angular/utils.ts","ng://apollo-angular/QueryRef.ts","ng://apollo-angular/tokens.ts","ng://apollo-angular/Apollo.ts","ng://apollo-angular/Query.ts","ng://apollo-angular/Mutation.ts","ng://apollo-angular/Subscription.ts","ng://apollo-angular/SelectPipe.ts","ng://apollo-angular/ApolloModule.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","fromPromise","promiseFn","Observable","subscriber","then","result","closed","next","complete","error","unsubscribe","ZoneScheduler","zone","now","Date","schedule","work","delay","state","run","queueScheduler","fixObservable","obs","observable","wrapWithZone","ngZone","pipe","observeOn","QueryRef","obsQuery","valueChanges","from","queryId","currentResult","getLastResult","getLastError","resetLastResults","refetch","variables","fetchMore","fetchMoreOptions","subscribeToMore","options","updateQuery","mapFn","stopPolling","startPolling","pollInterval","setOptions","opts","setVariables","tryFetch","fetchResults","APOLLO_OPTIONS","InjectionToken","ApolloBase","_client","watchQuery","client","query","_this","mutate","subscribe","extra","useZone","getClient","setClient","Error","defineProperty","beforeEach","checkInstance","Apollo","_ngZone","apolloOptions","_super","map","Map","createDefault","__extends","__","constructor","create","tslib_1.__extends","name","createNamed","default","use","get","ApolloClient","has","set","Injectable","NgZone","Optional","type","Inject","args","Query","apollo","watch","document","fetch","Mutation","mutation","Subscription","SelectPipe","transform","obj","data","Pipe","PROVIDERS","DECLARATIONS","ApolloModule","NgModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgZone} from '@angular/core';\nimport {ObservableQuery} from 'apollo-client';\nimport {Observable as ApolloObservable} from 'apollo-client/util/Observable';\nimport {observeOn} from 'rxjs/operators';\nimport {\n  Observable,\n  Subscription,\n  queueScheduler,\n  SchedulerLike,\n  SchedulerAction,\n  observable,\n} from 'rxjs';\n\nexport function fromPromise<T>(promiseFn: () => Promise<T>): Observable<T> {\n  return new Observable<T>(subscriber => {\n    promiseFn().then(\n      result => {\n        if (!subscriber.closed) {\n          subscriber.next(result);\n          subscriber.complete();\n        }\n      },\n      error => {\n        if (!subscriber.closed) {\n          subscriber.error(error);\n        }\n      },\n    );\n\n    return () => subscriber.unsubscribe();\n  });\n}\n\nexport class ZoneScheduler implements SchedulerLike {\n  constructor(private zone: NgZone) {}\n\n  public now = Date.now ? Date.now : () => +new Date();\n\n  public schedule<T>(\n    work: (this: SchedulerAction<T>, state?: T) => void,\n    delay: number = 0,\n    state?: T,\n  ): Subscription {\n    return this.zone.run(() =>\n      queueScheduler.schedule(work, delay, state),\n    ) as Subscription;\n  }\n}\n\n// XXX: Apollo's QueryObservable is not compatible with RxJS\n// TODO: remove it in one of future releases\n// https://github.com/ReactiveX/rxjs/blob/9fb0ce9e09c865920cf37915cc675e3b3a75050b/src/internal/util/subscribeTo.ts#L32\nexport function fixObservable<T>(\n  obs: ObservableQuery<T> | ApolloObservable<T>,\n): ObservableQuery<T> | ApolloObservable<T> {\n  (obs as any)[observable] = () => obs;\n  return obs;\n}\n\nexport function wrapWithZone<T>(\n  obs: Observable<T>,\n  ngZone: NgZone,\n): Observable<T> {\n  return obs.pipe(observeOn(new ZoneScheduler(ngZone)));\n}\n","import {NgZone} from '@angular/core';\nimport {\n  ApolloQueryResult,\n  ObservableQuery,\n  ApolloError,\n  FetchMoreQueryOptions,\n  FetchMoreOptions,\n  SubscribeToMoreOptions,\n  UpdateQueryOptions,\n  ApolloCurrentResult,\n} from 'apollo-client';\nimport {Observable, from} from 'rxjs';\n\nimport {wrapWithZone, fixObservable} from './utils';\nimport {R} from './types';\n\nexport class QueryRef<T, V = R> {\n  public valueChanges: Observable<ApolloQueryResult<T>>;\n  public queryId: string;\n\n  constructor(private obsQuery: ObservableQuery<T, V>, ngZone: NgZone) {\n    this.valueChanges = wrapWithZone(\n      from(fixObservable(this.obsQuery)),\n      ngZone,\n    );\n    this.queryId = this.obsQuery.queryId;\n  }\n\n  // ObservableQuery's methods\n\n  public result(): Promise<ApolloQueryResult<T>> {\n    return this.obsQuery.result();\n  }\n\n  public currentResult(): ApolloCurrentResult<T> {\n    return this.obsQuery.currentResult();\n  }\n\n  public getLastResult(): ApolloQueryResult<T> {\n    return this.obsQuery.getLastResult();\n  }\n\n  public getLastError(): ApolloError {\n    return this.obsQuery.getLastError();\n  }\n\n  public resetLastResults(): void {\n    return this.obsQuery.resetLastResults();\n  }\n\n  public refetch(variables?: V): Promise<ApolloQueryResult<T>> {\n    return this.obsQuery.refetch(variables);\n  }\n\n  public fetchMore<K extends keyof V>(\n    fetchMoreOptions: FetchMoreQueryOptions<V, K> & FetchMoreOptions<T, V>,\n  ): Promise<ApolloQueryResult<T>> {\n    return this.obsQuery.fetchMore(fetchMoreOptions);\n  }\n\n  public subscribeToMore<MT = any, MV = R>(\n    options: SubscribeToMoreOptions<MT, MV>,\n  ): () => void {\n    // XXX: there's a bug in apollo-client typings\n    // it should not inherit types from ObservableQuery\n    return this.obsQuery.subscribeToMore(options as any);\n  }\n  public updateQuery(\n    mapFn: (previousQueryResult: T, options: UpdateQueryOptions<V>) => T,\n  ): void {\n    return this.obsQuery.updateQuery(mapFn);\n  }\n\n  public stopPolling(): void {\n    return this.obsQuery.stopPolling();\n  }\n\n  public startPolling(pollInterval: number): void {\n    return this.obsQuery.startPolling(pollInterval);\n  }\n\n  public setOptions(opts: any): Promise<ApolloQueryResult<T>> {\n    return this.obsQuery.setOptions(opts);\n  }\n\n  public setVariables(\n    variables: V,\n    tryFetch: boolean = false,\n    fetchResults = true,\n  ): Promise<ApolloQueryResult<T>> {\n    return this.obsQuery.setVariables(variables, tryFetch, fetchResults);\n  }\n}\n","import {InjectionToken} from '@angular/core';\nimport {ApolloClientOptions} from 'apollo-client';\n\nexport const APOLLO_OPTIONS = new InjectionToken<ApolloClientOptions<any>>(\n  '[apollo-angular] options',\n);\n","import {Injectable, Optional, Inject, NgZone} from '@angular/core';\nimport {\n  ApolloClient,\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  ApolloQueryResult,\n  SubscriptionOptions,\n  ApolloClientOptions,\n  ObservableQuery,\n} from 'apollo-client';\nimport {FetchResult} from 'apollo-link';\nimport {Observable, from} from 'rxjs';\n\nimport {QueryRef} from './QueryRef';\nimport {ExtraSubscriptionOptions, R} from './types';\nimport {APOLLO_OPTIONS} from './tokens';\nimport {fromPromise, wrapWithZone, fixObservable} from './utils';\n\nexport class ApolloBase<TCacheShape = any> {\n  constructor(\n    private ngZone: NgZone,\n    private _client?: ApolloClient<TCacheShape>,\n  ) {}\n\n  public watchQuery<T, V = R>(options: WatchQueryOptions<V>): QueryRef<T, V> {\n    return new QueryRef<T, V>(\n      this.client.watchQuery<T, V>({...options}) as ObservableQuery<T, V>,\n      this.ngZone,\n    );\n  }\n\n  public query<T, V = R>(\n    options: QueryOptions<V>,\n  ): Observable<ApolloQueryResult<T>> {\n    return fromPromise<ApolloQueryResult<T>>(() =>\n      this.client.query<T, V>({...options}),\n    );\n  }\n\n  public mutate<T, V = R>(\n    options: MutationOptions<T, V>,\n  ): Observable<FetchResult<T>> {\n    return fromPromise<FetchResult<T>>(() =>\n      this.client.mutate<T, V>({...options}),\n    );\n  }\n\n  public subscribe<T, V = R>(\n    options: SubscriptionOptions<V>,\n    extra?: ExtraSubscriptionOptions,\n  ): Observable<any> {\n    const obs = from(fixObservable(this.client.subscribe<T, V>({...options})));\n\n    return extra && extra.useZone !== true\n      ? obs\n      : wrapWithZone(obs, this.ngZone);\n  }\n\n  public getClient() {\n    return this._client;\n  }\n\n  public setClient(client: ApolloClient<TCacheShape>) {\n    if (this._client) {\n      throw new Error('Client has been already defined');\n    }\n\n    this._client = client;\n  }\n\n  private get client(): ApolloClient<TCacheShape> {\n    this.beforeEach();\n\n    return this._client;\n  }\n\n  private beforeEach(): void {\n    this.checkInstance();\n  }\n\n  private checkInstance(): void {\n    if (!this._client) {\n      throw new Error('Client has not been defined yet');\n    }\n  }\n}\n\n@Injectable()\nexport class Apollo extends ApolloBase<any> {\n  private map: Map<string, ApolloBase<any>> = new Map<\n    string,\n    ApolloBase<any>\n  >();\n\n  constructor(\n    private _ngZone: NgZone,\n    @Optional()\n    @Inject(APOLLO_OPTIONS)\n    apolloOptions?: ApolloClientOptions<any>,\n  ) {\n    super(_ngZone);\n\n    if (apolloOptions) {\n      this.createDefault(apolloOptions);\n    }\n  }\n\n  public create<TCacheShape>(\n    options: ApolloClientOptions<TCacheShape>,\n    name?: string,\n  ): void {\n    if (name && name !== 'default') {\n      this.createNamed<TCacheShape>(name, options);\n    } else {\n      this.createDefault<TCacheShape>(options);\n    }\n  }\n\n  public default(): ApolloBase<any> {\n    return this;\n  }\n\n  public use(name: string): ApolloBase<any> {\n    if (name === 'default') {\n      return this.default();\n    }\n    return this.map.get(name);\n  }\n\n  public createDefault<TCacheShape>(\n    options: ApolloClientOptions<TCacheShape>,\n  ): void {\n    if (this.getClient()) {\n      throw new Error('Apollo has been already created.');\n    }\n\n    return this.setClient(new ApolloClient<TCacheShape>(options));\n  }\n\n  public createNamed<TCacheShape>(\n    name: string,\n    options: ApolloClientOptions<TCacheShape>,\n  ): void {\n    if (this.map.has(name)) {\n      throw new Error(`Client ${name} has been already created`);\n    }\n    this.map.set(\n      name,\n      new ApolloBase(this._ngZone, new ApolloClient<TCacheShape>(options)),\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {DocumentNode} from 'graphql';\nimport {ApolloQueryResult} from 'apollo-client';\nimport {Observable} from 'rxjs';\n\nimport {Apollo} from './Apollo';\nimport {QueryRef} from './QueryRef';\nimport {WatchQueryOptions, QueryOptions, R} from './types';\n\n@Injectable()\nexport class Query<T = {}, V = R> {\n  public readonly document: DocumentNode;\n  public client = 'default';\n\n  constructor(protected apollo: Apollo) {}\n\n  public watch(variables?: V, options?: WatchQueryOptions<V>): QueryRef<T, V> {\n    return this.apollo.use(this.client).watchQuery<T, V>({\n      ...options,\n      variables,\n      query: this.document,\n    });\n  }\n\n  public fetch(\n    variables?: V,\n    options?: QueryOptions<V>,\n  ): Observable<ApolloQueryResult<T>> {\n    return this.apollo.use(this.client).query<T, V>({\n      ...options,\n      variables,\n      query: this.document,\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {DocumentNode} from 'graphql';\nimport {Observable} from 'rxjs';\nimport {FetchResult} from 'apollo-link';\n\nimport {Apollo} from './Apollo';\nimport {MutationOptions, R} from './types';\n\n@Injectable()\nexport class Mutation<T = {}, V = R> {\n  public readonly document: DocumentNode;\n  public client = 'default';\n\n  constructor(protected apollo: Apollo) {}\n\n  public mutate(\n    variables?: V,\n    options?: MutationOptions<T, V>,\n  ): Observable<FetchResult<T>> {\n    return this.apollo.use(this.client).mutate<T, V>({\n      ...options,\n      variables,\n      mutation: this.document,\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {DocumentNode} from 'graphql';\nimport {Observable} from 'rxjs';\n\nimport {Apollo} from './Apollo';\nimport {\n  SubscriptionOptions,\n  ExtraSubscriptionOptions,\n  SubscriptionResult,\n  R,\n} from './types';\n\n@Injectable()\nexport class Subscription<T = any, V = R> {\n  public readonly document: DocumentNode;\n  public client = 'default';\n\n  constructor(protected apollo: Apollo) {}\n\n  public subscribe(\n    variables?: V,\n    options?: SubscriptionOptions<V>,\n    extra?: ExtraSubscriptionOptions,\n  ): Observable<SubscriptionResult<T>> {\n    return this.apollo.use(this.client).subscribe<T, V>(\n      {\n        ...options,\n        variables,\n        query: this.document,\n      },\n      extra,\n    );\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'select',\n})\nexport class SelectPipe implements PipeTransform {\n  public transform(obj: any, name: string = '') {\n    if (name !== '') {\n      return obj && obj.data && obj.data[name];\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {Apollo} from './Apollo';\nimport {SelectPipe} from './SelectPipe';\n\nexport const PROVIDERS = [Apollo];\nexport const DECLARATIONS = [SelectPipe];\n\n@NgModule({\n  providers: PROVIDERS,\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS,\n})\nexport class ApolloModule {}\n"]}