/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Apollo } from './Apollo';
/**
 * @template T, V
 */
var Subscription = /** @class */ (function () {
    function Subscription(apollo) {
        this.apollo = apollo;
        this.client = 'default';
    }
    /**
     * @param {?=} variables
     * @param {?=} options
     * @param {?=} extra
     * @return {?}
     */
    Subscription.prototype.subscribe = /**
     * @param {?=} variables
     * @param {?=} options
     * @param {?=} extra
     * @return {?}
     */
    function (variables, options, extra) {
        return this.apollo.use(this.client).subscribe(tslib_1.__assign({}, options, { variables: variables, query: this.document }), extra);
    };
    Subscription.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    Subscription.ctorParameters = function () { return [
        { type: Apollo }
    ]; };
    return Subscription;
}());
export { Subscription };
if (false) {
    /** @type {?} */
    Subscription.prototype.document;
    /** @type {?} */
    Subscription.prototype.client;
    /** @type {?} */
    Subscription.prototype.apollo;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXBvbGxvLWFuZ3VsYXIvIiwic291cmNlcyI6WyJTdWJzY3JpcHRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxVQUFVLENBQUM7Ozs7QUFRaEM7SUFLRSxzQkFBc0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7UUFGN0IsV0FBTSxHQUFHLFNBQVMsQ0FBQztJQUVhLENBQUM7Ozs7Ozs7SUFFakMsZ0NBQVM7Ozs7OztJQUFoQixVQUNFLFNBQWEsRUFDYixPQUFnQyxFQUNoQyxLQUFnQztRQUVoQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLHNCQUV0QyxPQUFPLElBQ1YsU0FBUyxXQUFBLEVBQ1QsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLEtBRXRCLEtBQUssQ0FDTixDQUFDO0lBQ0osQ0FBQzs7Z0JBcEJGLFVBQVU7Ozs7Z0JBUkgsTUFBTTs7SUE2QmQsbUJBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQXBCWSxZQUFZOzs7SUFDdkIsZ0NBQXVDOztJQUN2Qyw4QkFBMEI7O0lBRWQsOEJBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RG9jdW1lbnROb2RlfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7QXBvbGxvfSBmcm9tICcuL0Fwb2xsbyc7XG5pbXBvcnQge1xuICBTdWJzY3JpcHRpb25PcHRpb25zLFxuICBFeHRyYVN1YnNjcmlwdGlvbk9wdGlvbnMsXG4gIFN1YnNjcmlwdGlvblJlc3VsdCxcbiAgUixcbn0gZnJvbSAnLi90eXBlcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTdWJzY3JpcHRpb248VCA9IGFueSwgViA9IFI+IHtcbiAgcHVibGljIHJlYWRvbmx5IGRvY3VtZW50OiBEb2N1bWVudE5vZGU7XG4gIHB1YmxpYyBjbGllbnQgPSAnZGVmYXVsdCc7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGFwb2xsbzogQXBvbGxvKSB7fVxuXG4gIHB1YmxpYyBzdWJzY3JpYmUoXG4gICAgdmFyaWFibGVzPzogVixcbiAgICBvcHRpb25zPzogU3Vic2NyaXB0aW9uT3B0aW9uczxWPixcbiAgICBleHRyYT86IEV4dHJhU3Vic2NyaXB0aW9uT3B0aW9ucyxcbiAgKTogT2JzZXJ2YWJsZTxTdWJzY3JpcHRpb25SZXN1bHQ8VD4+IHtcbiAgICByZXR1cm4gdGhpcy5hcG9sbG8udXNlKHRoaXMuY2xpZW50KS5zdWJzY3JpYmU8VCwgVj4oXG4gICAgICB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIHZhcmlhYmxlcyxcbiAgICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgICB9LFxuICAgICAgZXh0cmEsXG4gICAgKTtcbiAgfVxufVxuIl19